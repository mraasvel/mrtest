Generating dynamic function names:

	https://stackoverflow.com/questions/652815/has-anyone-ever-had-a-use-for-the-counter-pre-processor-macro
	https://gcc.gnu.org/onlinedocs/cpp/Common-Predefined-Macros.html

	__COUNTER__ macro


	TEST_CASE(unique_id) {}

	Expand:

	void unique_id(void); // prototype for below

	void _MR_add_entry __COUNTER__ (void) {
		FunctionTable["unique_id"] = unique_id;
	}

	void unique_id(void) {
		// tests
	}

	Problem: implicit declaration of function _MR_add_entry and unique_id function?
	Solution: use dlsym
	Problem: have to link with some flags (ldl, -rdynamic), so that the functions can be found

Getting function pointer based on name:

	https://man7.org/linux/man-pages/man3/dlsym.3.html
